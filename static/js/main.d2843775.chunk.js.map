{"version":3,"sources":["components/Navbar.jsx","components/Spinner.jsx","components/Register.jsx","components/UserScore.jsx","components/AdminLogin.jsx","components/Option.jsx","components/Test.jsx","components/AdminOptions.jsx","components/DeleteQuestion.jsx","components/AddQuestion.jsx","components/OtpCheck.jsx","App.js","index.js"],"names":["Navbar","className","to","type","id","style","color","textDecoration","Spinner","height","role","Register","setTest","setUser","setHiringManagerEmail","setOtp","useState","email","setEmail","name","setName","college","setCollege","phone","setPhone","loading","setLoading","history","useHistory","query","URLSearchParams","useLocation","search","useEffect","get","textAlign","onSubmit","e","preventDefault","axios","post","then","response","data","user","test","otp","push","catch","error","console","log","placeholder","value","onChange","currentTarget","width","UserScore","testScore","hiringManagerEmail","submitted","setSubmitted","totalScore","formattedScoreForApi","x","i","dataToBeSent","individualScore","String","toLowerCase","alert","AdminLogin","password","setPassword","sessionStorage","getItem","setItem","token","Option","question","alpha","selectedOption","setSelectedOption","_id","toUpperCase","checked","userAns","htmlfor","src","copiedUrl","trim","intermediate","split","genImgUrl","alt","msToTime","duration","seconds","parseInt","minutes","hours","Test","setTestScore","qNo","setQNo","timeLeft","setTimeLeft","warningLeft","setWarningLeft","onBlur","level1","level2","level3","level4","level5","window","addEventListener","removeEventListener","setTimeout","clearTimeout","questionImg","objectFit","map","el","onClick","level","levelTag","newScore","answerOption","AdminOptions","headers","Authorization","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","click","clear","DeleteQuestion","questions","setQuestions","getQuestionsReq","class","scope","index","AddQuestion","ques","setQues","qImg","setQImg","opA","setOpA","opB","setOpB","opC","setOpC","opD","setOpD","aImg","setAImg","bImg","setBImg","cImg","setCImg","dImg","setDImg","setLevel","ans","setAns","optionA","optionB","optionC","optionD","res","htmlFor","OtpCheck","userOtp","setUserOtp","App","path","ReactDOM","render","getElementById"],"mappings":"kLAiCeA,EAhCF,WACX,OACE,qBAAKC,UAAU,mDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,6BAGA,wBACED,UAAU,iBACVE,KAAK,SACL,iBAAe,WACf,iBAAe,cACf,gBAAc,aACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMF,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BG,GAAG,aAA7C,UACE,oBAAIH,UAAU,oCACd,cAAC,IAAD,CACEC,GAAG,cACHG,MAAO,CAAEC,MAAO,YAAaC,eAAgB,QAF/C,SAIE,sBAAMN,UAAU,cAAhB,8B,gBCVGO,EAfD,WACZ,OACE,mCACE,qBACEP,UAAU,mDACVI,MAAO,CAAEI,OAAQ,QAFnB,SAIE,qBAAKR,UAAU,iBAAiBS,KAAK,SAArC,SACE,sBAAMT,UAAU,kBAAhB,+B,OCiKKU,EAhKA,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,sBAAuBC,EAAa,EAAbA,OACzD,EAAwBC,mBAAS,IAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAAsBF,mBAAS,IAA/B,mBAAKG,EAAL,KAAWC,EAAX,KACA,EAA4BJ,mBAAS,IAArC,mBAAKK,EAAL,KAAcC,EAAd,KACA,EAAwBN,mBAAS,IAAjC,mBAAKO,EAAL,KAAYC,EAAZ,KACA,EAA4BR,oBAAS,GAArC,mBAAKS,EAAL,KAAcC,EAAd,KACIC,EAAUC,cACVC,EAVG,IAAIC,gBAAgBC,cAAcC,QAoBzC,OANAC,qBAAU,WACJJ,EAAMK,IAAI,UACZpB,EAAsBe,EAAMK,IAAI,YAEjC,IAGD,mCACIT,EAuIA,cAAC,EAAD,IAtIA,qBAAKxB,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAOI,MAAO,CAAE8B,UAAW,UAAzC,0BAGA,+BACE,kIAIA,gFACiD,IAC/C,2CAFF,iRAKA,+GAIA,mFACoD,IAClD,2CAFF,2GAOF,uBACA,uCACA,+BACE,iFACA,gEACA,kIAKF,0BAEF,sBAAKlC,UAAU,4BAAf,UACE,oBAAII,MAAO,CAAE8B,UAAW,UAAxB,oCACA,uBACElC,UAAU,OACVmC,SAAU,SAACC,GACTA,EAAEC,iBACFZ,GAAW,GACXa,IACGC,KACC,wDACA,CACEvB,QACAM,QACAF,UACAF,SAGHsB,MAAK,SAACC,GACL,MAA0BA,EAASC,KAA7BC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,IAClBjC,EAAQ+B,GACRhC,EAAQiC,GACR9B,EAAO+B,GACPpB,GAAW,GACXC,EAAQoB,KAAK,WAGdC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAzBpB,UA6BE,qBAAKhD,UAAU,OAAf,SACE,uBACEE,KAAK,OACLiD,YAAY,YACZnD,UAAU,eACVG,GAAG,OACHiD,MAAOlC,EACPmC,SAAU,SAACjB,GACTjB,EAAQiB,EAAEkB,cAAcF,YAK9B,qBAAKpD,UAAU,OAAf,SACE,uBACEmD,YAAY,gBACZjD,KAAK,QACLF,UAAU,eACVG,GAAG,QACHiD,MAAOpC,EACPqC,SAAU,SAACjB,GACTnB,EAASmB,EAAEkB,cAAcF,YAK/B,qBAAKpD,UAAU,OAAf,SACE,uBACEmD,YAAY,eACZjD,KAAK,SACLF,UAAU,eACVG,GAAG,QACHiD,MAAO9B,EACP+B,SAAU,SAACjB,GACTb,EAASa,EAAEkB,cAAcF,YAK/B,qBAAKpD,UAAU,OAAf,SACE,uBACEE,KAAK,OACLiD,YAAY,UACZnD,UAAU,eACVG,GAAG,UACHiD,MAAOhC,EACPiC,SAAU,SAACjB,GACTf,EAAWe,EAAEkB,cAAcF,YAKjC,wBACElD,KAAK,SACLF,UAAU,mBACVI,MAAO,CAAEmD,MAAO,QAHlB,sCClFDC,EA3DC,SAAC,GAA6C,IAA3Cb,EAA0C,EAA1CA,KAAMc,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBAClC,EAAgC3C,oBAAS,GAAzC,mBAAK4C,EAAL,KAAgBC,EAAhB,KAoCA,OAnCA5B,qBAAU,WACR,IAAI6B,EAAa,EACbC,EAAuB,GAC3B,IAAK,IAAIC,KAAKN,EACZI,GAAcJ,EAAUM,GAE1B,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IACtBF,EAAqBE,EAAI,GAAKP,EAAU,QAAD,OAASO,IAGlD,IAAIC,EAAe,CACjBjD,MAAO2B,EAAK3B,MACZkD,gBAAiBJ,EACjBD,cAGEH,GAtBJ,wJACQd,KAAKuB,OAqB2BT,GArBbU,iBAsBzBH,EAAaP,mBAAqBA,GAGpCT,QAAQC,IAAIe,GAEZ3B,IACGC,KACC,2DACA0B,GAEDzB,MAAK,WACJoB,GAAa,MAEdb,OAAM,SAACC,GACNqB,MAAM,UACNpB,QAAQC,IAAIF,QAEf,IAED,mCACGL,EACC,sBAAK3C,UAAU,gBAAf,UACE,6BAAK2C,EAAKzB,OACV,6BAAKyB,EAAK3B,QACV,uBACC2C,EACC,+FAIA,2EAIJ,cAAC,IAAD,CAAU1D,GAAG,SCyBNqE,EAnFE,WACf,MAAwBvD,mBAAS,IAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAA8BF,mBAAS,IAAvC,mBAAKwD,EAAL,KAAeC,EAAf,KACA,EAA4BzD,oBAAS,GAArC,mBAAKS,EAAL,KAAcC,EAAd,KACIC,EAAUC,cAId,OAHAK,qBAAU,WACJyC,eAAeC,QAAQ,UAAUhD,EAAQoB,KAAK,mBACjD,IAED,mCACItB,EAmEA,cAAC,EAAD,IAlEA,qBAAKxB,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,oBAAIA,UAAU,YAAYI,MAAO,CAAE8B,UAAW,UAA9C,yBAGA,uBACElC,UAAU,OACVmC,SAAU,SAACC,GACTA,EAAEC,iBACFZ,GAAW,GACXa,IACGC,KACC,sDACA,CACEvB,QACAuD,aAGH/B,MAAK,SAACC,GACLgC,eAAeE,QAAQ,QAASlC,EAASC,KAAKkC,OAC9CnD,GAAW,GACXC,EAAQoB,KAAK,oBAEdC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZvB,GAAW,OApBnB,UAwBE,qBAAKzB,UAAU,OAAf,SACE,uBACEmD,YAAY,gBACZjD,KAAK,QACLF,UAAU,eACVoD,MAAOpC,EACPqC,SAAU,SAACjB,GACTnB,EAASmB,EAAEkB,cAAcF,YAK/B,qBAAKpD,UAAU,OAAf,SACE,uBACEE,KAAK,WACLiD,YAAY,WACZnD,UAAU,eACVoD,MAAOmB,EACPlB,SAAU,SAACjB,GACToC,EAAYpC,EAAEkB,cAAcF,YAKlC,wBACElD,KAAK,SACLF,UAAU,mBACVI,MAAO,CAAEmD,MAAO,QAHlB,gC,QC3BDsB,EA3CF,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAY/C,OACE,sBAAKjF,UAAU,aAAf,UACE,uBACEA,UAAU,mBACVE,KAAK,QACLgB,KAAM,MAAQ4D,EAASI,IACvB9B,MAAK,gBAAW2B,EAAMI,eACtBC,QACEJ,IAAc,gBAAcD,EAAMI,eAEpC9B,SAAU,SAACjB,GACT,IAAIiD,EAAUjD,EAAEkB,cAAcF,MAC9B6B,EAAkBI,IAEpBlF,GAAI2E,EAASI,IAAMH,IAErB,uBAAO/E,UAAU,mBAAmBsF,QAASR,EAASI,IAAtD,SACGJ,EAAS,GAAD,OAAIC,EAAJ,QACP,qBACE3E,MAAO,CAAEI,OAAQ,QACjB+E,IA/BM,SAACC,GAEf,GADAA,EAAYA,EAAUC,OACP,CACb,IAAIC,EAAeF,EAAUG,MAAM,oCAAoC,GACvE,GAAID,EAEF,MAAO,8CADEA,EAAaC,MAAM,SAAS,GAIzC,MAAO,GAsBMC,CAAUd,EAAS,SAAD,OAAUC,EAAMI,iBACvCU,IAAI,WAGNf,EAAS,SAAD,OAAUC,EAAMI,sBChC9BW,EAAW,SAACC,GACd,IAAIC,EAAUC,SAAUF,EAAW,IAAQ,IACzCG,EAAUD,SAAUF,EAAQ,IAAkB,IAC9CI,EAAQF,SAAUF,EAAQ,KAAuB,IAMnD,OAJAI,EAAQA,EAAQ,GAAK,IAAMA,EAAQA,GAIpB,KAHfD,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GAGV,KAF/BF,EAAUA,EAAU,GAAK,IAAMA,EAAUA,IAqI5BI,EAhIJ,SAAC,GAAuC,IAArCxD,EAAoC,EAApCA,KAAMa,EAA8B,EAA9BA,UAAW4C,EAAmB,EAAnBA,aAC7B,EAAoBtF,mBAAS,GAA7B,mBAAKuF,EAAL,KAAUC,EAAV,KACA,EAA8BxF,mBAAS,KAAvC,mBAAKyF,EAAL,KAAeC,EAAf,KAGA,EAA0C1F,oBAAS,GAAnD,mBAAKiE,EAAL,KAAqBC,EAArB,KACA,EAAoClE,mBAAS,GAA7C,mBAAK2F,EAAL,KAAkBC,EAAlB,KACIjF,EAAUC,cAaRiF,EAAS,WACTF,EAAc,GAChBrC,MACE,2CACEqC,EACA,sDAGNC,EAAeD,EAAc,GACzBA,GAAe,GACjBhF,EAAQoB,KAAK,eAkCjB,OA9BAd,qBAAU,WACRqE,EAAa,CACXQ,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,MAET,IAEHjF,qBAAU,WAER,OADAkF,OAAOC,iBAAiB,OAAQP,GACzB,WACLM,OAAOE,oBAAoB,OAAQR,OAIvC5E,qBAAU,WACR,IAAI7B,EAAKkH,YAAW,WACdb,EAAW,EACbC,EAAYD,EAAW,KAEvB9E,EAAQoB,KAAK,gBAEd,KACH,OAAO,WACLwE,aAAanH,MAEd,CAACqG,IAGF,mCACGF,EAAM,GACL,cAAC,IAAD,CAAUrG,GAAG,eAEb,mCACG2C,EACC,sBAAK5C,UAAU,gBAAf,UACE,4BAAI8F,EAASU,KACb,mCACIF,EADJ,KACW1D,EAAK0D,EAAM,GAAGxB,YAExBlC,EAAK0D,EAAM,GAAGiB,YACb,qBACEnH,MAAO,CACLI,OAAQ,OACR+C,MAAO,OACPiE,UAAW,WAEbjC,IA3EA,SAACC,GAEf,GADAA,EAAYA,EAAUC,OACP,CACb,IAAIC,EAAeF,EAAUG,MAAM,oCAAoC,GACvE,GAAID,EAEF,MAAO,8CADEA,EAAaC,MAAM,SAAS,GAIzC,MAAO,GAkEYC,CAAUhD,EAAK0D,EAAM,GAAGiB,aAC7B1B,IAAI,aAGN,GAEF,qBAAK7F,UAAU,OAAf,SArFE,CAAC,IAAK,IAAK,IAAK,KAsFPyH,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAEE5C,SAAUlC,EAAK0D,EAAM,GACrBvB,MAAO2C,EACPrB,aAAcA,EACd5C,UAAWA,EACXuB,eAAgBA,EAChBC,kBAAmBA,GANdyC,QAUX,wBACE1H,UAAU,4BACV2H,QAAS,WACP,IAAIC,EAAQhF,EAAK0D,EAAM,GAAGuB,SACtBC,EAAQ,eAAQrE,GAChBb,EAAK0D,EAAM,GAAGyB,eAAiB/C,IACjC8C,EAASF,GAASnE,EAAUmE,GAAS,GAEvCvB,EAAayB,GACb7C,GAAkB,GAElBsB,EAAOD,EAAM,IAXjB,qBAkBF,cAAC,IAAD,CAAUrG,GAAG,WCtDV+H,EA/EI,WACjB,IAAItG,EAAUC,cAOd,OALAK,qBAAU,WACIyC,eAAeC,QAAQ,UACvBhD,EAAQoB,KAAK,iBACxB,IAGD,qCACE,wBACE9C,UAAU,sBACV2H,QAAS,WACP,IAAI/C,EAAQH,eAAeC,QAAQ,SACnCpC,IACGL,IAAI,uDAAwD,CAC3DgG,QAAS,CAAEC,cAAc,UAAD,OAAYtD,MAErCpC,MAAK,SAACC,GACL,IAAM0F,EAAMjB,OAAOkB,IAAIC,gBAAgB,IAAIC,KAAK,CAAC7F,EAASC,QACpD6F,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOP,EACZI,EAAKI,aAAa,WAAY,eAC9BJ,EAAKK,WAEN7F,OAAM,SAACC,GACNqB,MAAM,SACNpB,QAAQC,IAAIF,OAjBpB,8BAuBA,uBACA,wBACEhD,UAAU,sBACV2H,QAAS,WACPjG,EAAQoB,KAAK,iBAHjB,8BAQA,uBACA,wBACE9C,UAAU,sBACV2H,QAAS,WACPjG,EAAQoB,KAAK,cAHjB,0BAQA,uBACA,wBACE9C,UAAU,sBACV2H,QAAS,WACP,IAAI/C,EAAQH,eAAeC,QAAQ,SACnCpC,IACGC,KACC,uDACA,GACA,CACE0F,QAAS,CAAEC,cAAc,UAAD,OAAYtD,MAGvCpC,MAAK,WACJiC,eAAeoE,QACfnH,EAAQoB,KAAK,kBAEdC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAjBpB,wBC0BS8F,EA9EM,WACnB,MAAgC/H,mBAAS,IAAzC,mBAAKgI,EAAL,KAAgBC,EAAhB,KACItH,EAAUC,cACdK,qBAAU,WACIyC,eAAeC,QAAQ,UACvBhD,EAAQoB,KAAK,eACzBmG,MACC,IACH,IAAIA,EAAkB,WACpB,IAAIrE,EAAQH,eAAeC,QAAQ,SACnCpC,IACGL,IAAI,6DAA8D,CACjEgG,QAAS,CAAEC,cAAc,UAAD,OAAYtD,MAErCpC,MAAK,SAACC,GACLuG,EAAavG,EAASC,KAAKqG,cAE5BhG,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAGlB,OACE,mCACE,qBAAKhD,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,+CACA,wBAAOkJ,MAAM,SAAb,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,aAGd,kCACE,uBACCJ,EAAUtB,KAAI,SAACC,EAAI0B,GAAL,OACb,+BACE,6BAAKA,EAAQ,IACb,6BAAK1B,EAAG5C,WACR,6BAAK4C,EAAGG,WACR,6BACE,wBACEqB,MAAM,iBACNvB,QAAS,WACP,IAAI/C,EAAQH,eAAeC,QAAQ,SACnCpC,IACGC,KACC,+DACA,CACE2C,IAAKwC,EAAGxC,KAEV,CACE+C,QAAS,CAAEC,cAAc,UAAD,OAAYtD,MAGvCpC,MAAK,WACJyG,OAEDlG,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAlBpB,0CC0LLqG,EApOG,WAChB,IAAI3H,EAAUC,cAIdK,qBAAU,WACIyC,eAAeC,QAAQ,UACvBhD,EAAQoB,KAAK,iBACxB,IAEH,MAAsB/B,mBAAS,IAA/B,mBAAKuI,EAAL,KAAWC,EAAX,KACA,EAAsBxI,mBAAS,IAA/B,mBAAKyI,EAAL,KAAWC,EAAX,KACA,EAAoB1I,mBAAS,IAA7B,mBAAK2I,EAAL,KAAUC,EAAV,KACA,EAAoB5I,mBAAS,IAA7B,mBAAK6I,EAAL,KAAUC,EAAV,KACA,EAAoB9I,mBAAS,IAA7B,mBAAK+I,EAAL,KAAUC,EAAV,KACA,EAAoBhJ,mBAAS,IAA7B,mBAAKiJ,EAAL,KAAUC,EAAV,KACA,EAAsBlJ,oBAAS,GAA/B,mBAAKmJ,EAAL,KAAWC,EAAX,KACA,EAAsBpJ,oBAAS,GAA/B,mBAAKqJ,EAAL,KAAWC,EAAX,KACA,EAAsBtJ,oBAAS,GAA/B,mBAAKuJ,EAAL,KAAWC,EAAX,KACA,EAAsBxJ,oBAAS,GAA/B,mBAAKyJ,EAAL,KAAWC,EAAX,KACA,EAAwB1J,mBAAS,UAAjC,mBAAK6G,EAAL,KAAY8C,EAAZ,KACA,EAAoB3J,mBAAS,WAA7B,mBAAK4J,EAAL,KAAUC,EAAV,KAEA,OACE,mCACE,sBAAK5K,UAAU,YAAf,UACE,kDACA,uBACEmC,SAAU,SAACC,GACTA,EAAEC,iBAEF,IAAIuC,EAAQH,eAAeC,QAAQ,SAC/BhC,EAAO,CACToC,SAAUwE,EACVuB,QAASnB,EACTQ,KAAMA,EACNY,QAASlB,EACTQ,KAAMA,EACNW,QAASjB,EACTQ,KAAMA,EACNU,QAAShB,EACTQ,KAAMA,EACNzC,aAAc4C,EACd9C,SAAUD,GAGR4B,IACF9G,EAAI,YAAkB8G,GAGxBlH,IACGC,KACC,4DACAG,EACA,CACEuF,QAAS,CAAEC,cAAc,UAAD,OAAYtD,MAGvCpC,MAAK,SAACyI,GAELhI,QAAQC,IAAI+H,GACZ5G,MAAM,qBAEPtB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZqB,MAAM,aAtCd,UA0CE,qBAAKrE,UAAU,OAAf,SACE,uBACEE,KAAK,OACLF,UAAU,eACVoD,MAAOkG,EACPjG,SAAU,SAACjB,GACTmH,EAAQnH,EAAEkB,cAAcF,QAE1BD,YAAY,eAGhB,qBAAKnD,UAAU,OAAf,SACE,uBACEE,KAAK,OACLkD,MAAOoG,EACPnG,SAAU,SAACjB,GACTqH,EAAQrH,EAAEkB,cAAcF,QAE1BpD,UAAU,eACVmD,YAAY,yBAIhB,qBAAKnD,UAAU,OAAf,SACE,uBACEE,KAAK,OACLkD,MAAOsG,EACPrG,SAAU,SAACjB,GACTuH,EAAOvH,EAAEkB,cAAcF,QAEzBpD,UAAU,eACVmD,YAAY,eAGhB,sBAAKnD,UAAU,kBAAf,UACE,uBACEA,UAAU,mBACVoF,QAAS8E,EACT7G,SAAU,WACR8G,GAASD,IAEXhK,KAAK,WACLC,GAAG,YAEL,uBAAOH,UAAU,mBAAmBkL,QAAQ,UAA5C,kCAKF,qBAAKlL,UAAU,OAAf,SACE,uBACEE,KAAK,OACLkD,MAAOwG,EACPvG,SAAU,SAACjB,GACTyH,EAAOzH,EAAEkB,cAAcF,QAEzBpD,UAAU,eACVmD,YAAY,eAGhB,sBAAKnD,UAAU,kBAAf,UACE,uBACEoF,QAASgF,EACT/G,SAAU,WACRgH,GAASD,IAEXpK,UAAU,mBACVE,KAAK,WACLC,GAAG,YAEL,uBAAOH,UAAU,mBAAmBkL,QAAQ,UAA5C,kCAKF,qBAAKlL,UAAU,OAAf,SACE,uBACEE,KAAK,OACLkD,MAAO0G,EACPzG,SAAU,SAACjB,GACT2H,EAAO3H,EAAEkB,cAAcF,QAEzBpD,UAAU,eACVmD,YAAY,eAGhB,sBAAKnD,UAAU,kBAAf,UACE,uBACEA,UAAU,mBACVoF,QAASkF,EACTjH,SAAU,WACRkH,GAASD,IAEXpK,KAAK,WACLC,GAAG,YAEL,uBAAOH,UAAU,mBAAmBkL,QAAQ,UAA5C,kCAIF,qBAAKlL,UAAU,OAAf,SACE,uBACEE,KAAK,OACLkD,MAAO4G,EACP3G,SAAU,SAACjB,GACT6H,EAAO7H,EAAEkB,cAAcF,QAEzBpD,UAAU,eACVmD,YAAY,eAGhB,sBAAKnD,UAAU,kBAAf,UACE,uBACEA,UAAU,mBACVoF,QAASoF,EACTnH,SAAU,WACRoH,GAASD,IAEXtK,KAAK,WACLC,GAAG,YAEL,uBAAOH,UAAU,mBAAmBkL,QAAQ,UAA5C,kCAIF,yBACElL,UAAU,mBACVoD,MAAOwE,EACPvE,SAAU,SAACjB,GACTsI,EAAStI,EAAEkB,cAAcF,QAJ7B,UAOE,wBAAQA,MAAM,SAAd,4BACA,wBAAQA,MAAM,SAAd,4BACA,wBAAQA,MAAM,SAAd,4BACA,wBAAQA,MAAM,SAAd,4BACA,wBAAQA,MAAM,SAAd,+BAEF,yBACEpD,UAAU,mBACVoD,MAAOuH,EACPtH,SAAU,SAACjB,GACTwI,EAAOxI,EAAEkB,cAAcF,QAJ3B,UAOE,wBAAQA,MAAM,UAAd,gCACA,wBAAQA,MAAM,UAAd,gCACA,wBAAQA,MAAM,UAAd,gCACA,wBAAQA,MAAM,UAAd,mCAEF,wBAAQlD,KAAK,SAASF,UAAU,kBAAhC,6BCxKKmL,EApDA,SAAC,GAAuC,IAArCtI,EAAoC,EAApCA,IAAK/B,EAA+B,EAA/BA,OAAQH,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACtC,EAA4BG,mBAAS,IAArC,mBAAKqK,EAAL,KAAcC,EAAd,KACI3J,EAAUC,cACd,OACE,mCACE,qBAAK3B,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,oBAAII,MAAO,CAAE8B,UAAW,UAAxB,gCACA,uBACElC,UAAU,OACVmC,SAAU,SAACC,GACTA,EAAEC,iBACE+I,GAAWvI,EACbnB,EAAQoB,KAAK,UAEblC,EAAQ,MACRD,EAAQ,MACRG,EAAO,MACPuD,MAAM,0CACN3C,EAAQoB,KAAK,OAXnB,UAeE,qBAAK9C,UAAU,OAAf,SACE,uBACEE,KAAK,OACLiD,YAAY,gBACZnD,UAAU,eACVG,GAAG,OACHiD,MAAOgI,EACP/H,SAAU,SAACjB,GACTiJ,EAAWjJ,EAAEkB,cAAcF,YAKjC,wBACElD,KAAK,SACLF,UAAU,mBACVI,MAAO,CAAEmD,MAAO,QAHlB,kCC+CC+H,EA5EL,WACR,MAAsBvK,mBAAS,MAA/B,mBAAK4B,EAAL,KAAW/B,EAAX,KACA,EAAsBG,mBAAS,MAA/B,mBAAK6B,EAAL,KAAWjC,EAAX,KACA,EAAoBI,mBAAS,MAA7B,mBAAK8B,EAAL,KAAU/B,EAAV,KACA,EAAgCC,mBAAS,CACvC8F,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,IALV,mBAAKxD,EAAL,KAAgB4C,EAAhB,KAOA,EAAkDtF,mBAAS,MAA3D,mBAAK2C,EAAL,KAAyB7C,EAAzB,KAEA,OACE,mCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO0K,KAAK,cAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,eAAC,IAAD,CAAOA,KAAK,gBAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,eAAC,IAAD,CAAOA,KAAK,YAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,eAAC,IAAD,CAAOA,KAAK,eAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,CACE3I,KAAMA,EACNa,UAAWA,EACXd,KAAMA,EACN0D,aAAcA,MAGlB,eAAC,IAAD,CAAOkF,KAAK,aAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE5I,KAAMA,EACNc,UAAWA,EACXC,mBAAoBA,OAGxB,eAAC,IAAD,CAAO6H,KAAK,OAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE1I,IAAKA,EACLjC,QAASA,EACTD,QAASA,EACTG,OAAQA,OAGZ,eAAC,IAAD,CAAOyK,KAAK,IAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE1K,sBAAuBA,EACvBD,QAASA,EACTD,QAASA,EACTG,OAAQA,eC1EtB0K,IAASC,OAAO,cAAC,EAAD,IAASjD,SAASkD,eAAe,W","file":"static/js/main.d2843775.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nlet Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-4\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          LIVIO Screening\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarText\"\n          aria-controls=\"navbarText\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\"></ul>\n          <Link\n            to=\"/adminlogin\"\n            style={{ color: \"#ffffff8c\", textDecoration: \"none\" }}\n          >\n            <span className=\"navbar-text\">Admin</span>\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","let Spinner = () => {\n  return (\n    <>\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: \"80vh\" }}\n      >\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Spinner;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"./Spinner\";\nimport { useHistory, useLocation } from \"react-router\";\n\nlet useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nlet Register = ({ setTest, setUser, setHiringManagerEmail, setOtp }) => {\n  let [email, setEmail] = useState(\"\");\n  let [name, setName] = useState(\"\");\n  let [college, setCollege] = useState(\"\");\n  let [phone, setPhone] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let history = useHistory();\n  let query = useQuery();\n\n  //make the fields required\n\n  useEffect(() => {\n    if (query.get(\"email\")) {\n      setHiringManagerEmail(query.get(\"email\"));\n    }\n  }, []);\n\n  return (\n    <>\n      {!loading ? (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-4\">\n              <h1 className=\"mb-4\" style={{ textAlign: \"center\" }}>\n                Instructions\n              </h1>\n              <ol>\n                <li>\n                  This is the first step to apply for a job at Livio Building\n                  Systems. Fill your required details.\n                </li>\n                <li>\n                  After providing the required details, click on{\" \"}\n                  <b>Start Test</b>. A security code will be sent to your given email to verify the email. Enter the code, this will begin a puzzle test which will\n                  contain 10 questions. You'll have 15 minutes to complete it. If you enter the wrong security code you'll be taken back to starting screen.\n                </li>\n                <li>\n                  Remember you'll not be able to go back to previous question\n                  once you skip it.\n                </li>\n                <li>\n                  Once you've completed the test you'll be taken to{\" \"}\n                  <b>Thank you </b>\n                  screen and our HR and hiring manager will receive your test\n                  score and the details provided by you.\n                </li>\n              </ol>\n              <hr />\n              <h4>Note:</h4>\n              <ol>\n                <li>Do not try to click outside the browser window.</li>\n                <li>Do not use keyboard shortcuts.</li>\n                <li>\n                  Your test will be automatically submitted if you click outside\n                  the browser more than 3 times.\n                </li>\n              </ol>\n              <ul></ul>\n            </div>\n            <div className=\"col-md-4 offset-md-2 mt-4\">\n              <h1 style={{ textAlign: \"center\" }}>Start Your Application</h1>\n              <form\n                className=\"mt-4\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setLoading(true);\n                  axios\n                    .post(\n                      \"https://livioscreeningapi.herokuapp.com/screening/new\",\n                      {\n                        email,\n                        phone,\n                        college,\n                        name,\n                      }\n                    )\n                    .then((response) => {\n                      let { user, test, otp } = response.data;\n                      setUser(user);\n                      setTest(test);\n                      setOtp(otp);\n                      setLoading(false);\n                      history.push(\"/otp\");\n                      // history.push(\"/test\");\n                    })\n                    .catch((error) => {\n                      console.log(error);\n                    });\n                }}\n              >\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Full Name\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    value={name}\n                    onChange={(e) => {\n                      setName(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    placeholder=\"Email Address\"\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"email\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    placeholder=\"Phone Number\"\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"phone\"\n                    value={phone}\n                    onChange={(e) => {\n                      setPhone(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"College\"\n                    className=\"form-control\"\n                    id=\"college\"\n                    value={college}\n                    onChange={(e) => {\n                      setCollege(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary \"\n                  style={{ width: \"100%\" }}\n                >\n                  Start Test\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default Register;\n","import { Redirect } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nlet validateEmail = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nlet UserScore = ({ user, testScore, hiringManagerEmail }) => {\n  let [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    let totalScore = 0;\n    let formattedScoreForApi = [];\n    for (let x in testScore) {\n      totalScore += testScore[x];\n    }\n    for (let i = 1; i <= 5; i++) {\n      formattedScoreForApi[i - 1] = testScore[`level${i}`];\n    }\n\n    let dataToBeSent = {\n      email: user.email,\n      individualScore: formattedScoreForApi,\n      totalScore,\n    };\n\n    if (hiringManagerEmail && validateEmail(hiringManagerEmail)) {\n      dataToBeSent.hiringManagerEmail = hiringManagerEmail;\n    }\n\n    console.log(dataToBeSent);\n\n    axios\n      .post(\n        \"https://livioscreeningapi.herokuapp.com/screening/submit\",\n        dataToBeSent\n      )\n      .then(() => {\n        setSubmitted(true);\n      })\n      .catch((error) => {\n        alert(\"Error!\");\n        console.log(error);\n      });\n  }, []);\n  return (\n    <>\n      {user ? (\n        <div className=\"container p-4\">\n          <h5>{user.name}</h5>\n          <h5>{user.email}</h5>\n          <hr />\n          {submitted ? (\n            <h2>\n              Thank you for applying to Livio. Your Test has been submitted\n            </h2>\n          ) : (\n            <h2>Please wait while we submit your test.</h2>\n          )}\n        </div>\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </>\n  );\n};\n\nexport default UserScore;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"./Spinner\";\nimport { useHistory } from \"react-router\";\n\nlet AdminLogin = () => {\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let history = useHistory();\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) history.push(\"/adminoptions\");\n  }, []);\n  return (\n    <>\n      {!loading ? (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4 offset-md-4 mt-4\">\n              <h1 className=\"mt-4 mb-4\" style={{ textAlign: \"center\" }}>\n                Admin login\n              </h1>\n              <form\n                className=\"mt-4\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setLoading(true);\n                  axios\n                    .post(\n                      \"https://livioscreeningapi.herokuapp.com/admin/login\",\n                      {\n                        email,\n                        password,\n                      }\n                    )\n                    .then((response) => {\n                      sessionStorage.setItem(\"token\", response.data.token);\n                      setLoading(false);\n                      history.push(\"/adminoptions\");\n                    })\n                    .catch((error) => {\n                      console.log(error);\n                      setLoading(false);\n                    });\n                }}\n              >\n                <div className=\"mb-3\">\n                  <input\n                    placeholder=\"Email Address\"\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"form-control\"\n                    value={password}\n                    onChange={(e) => {\n                      setPassword(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary \"\n                  style={{ width: \"100%\" }}\n                >\n                  Login\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default AdminLogin;\n","let Option = ({ question, alpha, selectedOption, setSelectedOption }) => {\n  let genImgUrl = (copiedUrl) => {\n    copiedUrl = copiedUrl.trim();\n    if (copiedUrl) {\n      let intermediate = copiedUrl.split(\"https://drive.google.com/file/d/\")[1];\n      if (intermediate) {\n        let id = intermediate.split(\"/view\")[0];\n        return \"https://drive.google.com/uc?export=view&id=\" + id;\n      }\n    }\n    return \"\";\n  };\n  return (\n    <div className=\"form-check\">\n      <input\n        className=\"form-check-input\"\n        type=\"radio\"\n        name={\"ans\" + question._id}\n        value={`option${alpha.toUpperCase()}`}\n        checked={\n          selectedOption === `option${alpha.toUpperCase()}` ? true : false\n        }\n        onChange={(e) => {\n          let userAns = e.currentTarget.value;\n          setSelectedOption(userAns);\n        }}\n        id={question._id + alpha}\n      />\n      <label className=\"form-check-label\" htmlfor={question._id}>\n        {question[`${alpha}Img`] ? (\n          <img\n            style={{ height: \"20vh\" }}\n            src={genImgUrl(question[`option${alpha.toUpperCase()}`])}\n            alt=\"option\"\n          />\n        ) : (\n          question[`option${alpha.toUpperCase()}`]\n        )}\n      </label>\n    </div>\n  );\n};\n\nexport default Option;\n","import { useEffect, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router\";\nimport Option from \"./Option\";\n\nlet msToTime = (duration) => {\n  let seconds = parseInt((duration / 1000) % 60),\n    minutes = parseInt((duration / (1000 * 60)) % 60),\n    hours = parseInt((duration / (1000 * 60 * 60)) % 24);\n\n  hours = hours < 10 ? \"0\" + hours : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n  return hours + \":\" + minutes + \":\" + seconds;\n};\n\nlet Test = ({ test, testScore, setTestScore }) => {\n  let [qNo, setQNo] = useState(1);\n  let [timeLeft, setTimeLeft] = useState(15 * 60 * 1000);\n\n  let options = [\"a\", \"b\", \"c\", \"d\"];\n  let [selectedOption, setSelectedOption] = useState(false);\n  let [warningLeft, setWarningLeft] = useState(3);\n  let history = useHistory();\n  let genImgUrl = (copiedUrl) => {\n    copiedUrl = copiedUrl.trim();\n    if (copiedUrl) {\n      let intermediate = copiedUrl.split(\"https://drive.google.com/file/d/\")[1];\n      if (intermediate) {\n        let id = intermediate.split(\"/view\")[0];\n        return \"https://drive.google.com/uc?export=view&id=\" + id;\n      }\n    }\n    return \"\";\n  };\n\n  const onBlur = () => {\n    if (warningLeft > 0) {\n      alert(\n        \"Click outside test area detected! After \" +\n          warningLeft +\n          \" clicks, your test will be automatically submitted\"\n      );\n    }\n    setWarningLeft(warningLeft - 1);\n    if (warningLeft <= 0) {\n      history.push(\"/userscore\");\n    }\n  };\n\n  useEffect(() => {\n    setTestScore({\n      level1: 0,\n      level2: 0,\n      level3: 0,\n      level4: 0,\n      level5: 0,\n    });\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"blur\", onBlur);\n    return () => {\n      window.removeEventListener(\"blur\", onBlur);\n    };\n  });\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1000);\n      } else {\n        history.push(\"/userscore\");\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [timeLeft]);\n\n  return (\n    <>\n      {qNo > 10 ? (\n        <Redirect to=\"/userscore\" />\n      ) : (\n        <>\n          {test ? (\n            <div className=\"container p-4\">\n              <p>{msToTime(timeLeft)}</p>\n              <h2>\n                Q{qNo}- {test[qNo - 1].question}\n              </h2>\n              {test[qNo - 1].questionImg ? (\n                <img\n                  style={{\n                    height: \"45vh\",\n                    width: \"80vw\",\n                    objectFit: \"contain\",\n                  }}\n                  src={genImgUrl(test[qNo - 1].questionImg)}\n                  alt=\"question\"\n                />\n              ) : (\n                \"\"\n              )}\n              <div className=\"mt-4\">\n                {options.map((el) => (\n                  <Option\n                    key={el}\n                    question={test[qNo - 1]}\n                    alpha={el}\n                    setTestScore={setTestScore}\n                    testScore={testScore}\n                    selectedOption={selectedOption}\n                    setSelectedOption={setSelectedOption}\n                  />\n                ))}\n              </div>\n              <button\n                className=\"btn btn-primary mt-4 mb-4\"\n                onClick={() => {\n                  let level = test[qNo - 1].levelTag;\n                  let newScore = { ...testScore };\n                  if (test[qNo - 1].answerOption === selectedOption) {\n                    newScore[level] = testScore[level] + 1;\n                  }\n                  setTestScore(newScore);\n                  setSelectedOption(false);\n\n                  setQNo(qNo + 1);\n                }}\n              >\n                Next\n              </button>\n            </div>\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Test;\n","import { useHistory } from \"react-router\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nlet AdminOptions = () => {\n  let history = useHistory();\n\n  useEffect(() => {\n    let token = sessionStorage.getItem(\"token\");\n    if (!token) history.push(\"/adminlogin\");\n  }, []);\n\n  return (\n    <>\n      <button\n        className=\"btn btn-primary m-4\"\n        onClick={() => {\n          let token = sessionStorage.getItem(\"token\");\n          axios\n            .get(\"https://livioscreeningapi.herokuapp.com/admin/getcsv\", {\n              headers: { Authorization: `Bearer ${token}` },\n            })\n            .then((response) => {\n              const url = window.URL.createObjectURL(new Blob([response.data]));\n              const link = document.createElement(\"a\");\n              link.href = url;\n              link.setAttribute(\"download\", \"results.csv\"); \n              link.click();\n            })\n            .catch((error) => {\n              alert(\"Error\");\n              console.log(error);\n            });\n        }}\n      >\n        Download Results\n      </button>\n      <br />\n      <button\n        className=\"btn btn-primary m-4\"\n        onClick={() => {\n          history.push(\"/admindelete\");\n        }}\n      >\n        Delete Questions\n      </button>\n      <br />\n      <button\n        className=\"btn btn-primary m-4\"\n        onClick={() => {\n          history.push(\"/adminadd\");\n        }}\n      >\n        Add Question\n      </button>\n      <br />\n      <button\n        className=\"btn btn-primary m-4\"\n        onClick={() => {\n          let token = sessionStorage.getItem(\"token\");\n          axios\n            .post(\n              \"https://livioscreeningapi.herokuapp.com/admin/logout\",\n              {},\n              {\n                headers: { Authorization: `Bearer ${token}` },\n              }\n            )\n            .then(() => {\n              sessionStorage.clear();\n              history.push(\"/adminlogin\");\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        }}\n      >\n        logout\n      </button>\n    </>\n  );\n};\n\nexport default AdminOptions;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nlet DeleteQuestion = () => {\n  let [questions, setQuestions] = useState([]);\n  let history = useHistory();\n  useEffect(() => {\n    let token = sessionStorage.getItem(\"token\");\n    if (!token) history.push(\"/adminlogin\");\n    getQuestionsReq();\n  }, []);\n  let getQuestionsReq = () => {\n    let token = sessionStorage.getItem(\"token\");\n    axios\n      .get(\"https://livioscreeningapi.herokuapp.com/admin/getquestions\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setQuestions(response.data.questions);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-8 offset-2\">\n          <h1>All Questions</h1>\n          <table class=\"table \">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Question</th>\n                <th scope=\"col\">Level</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr></tr>\n              {questions.map((el, index) => (\n                <tr>\n                  <td>{index + 1}</td>\n                  <td>{el.question}</td>\n                  <td>{el.levelTag}</td>\n                  <td>\n                    <button\n                      class=\"btn btn-danger\"\n                      onClick={() => {\n                        let token = sessionStorage.getItem(\"token\");\n                        axios\n                          .post(\n                            \"https://livioscreeningapi.herokuapp.com/admin/deletequestion\",\n                            {\n                              _id: el._id,\n                            },\n                            {\n                              headers: { Authorization: `Bearer ${token}` },\n                            }\n                          )\n                          .then(() => {\n                            getQuestionsReq();\n                          })\n                          .catch((error) => {\n                            console.log(error);\n                          });\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DeleteQuestion;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\n\nlet AddQuestion = () => {\n  let history = useHistory();\n\n \n\n  useEffect(() => {\n    let token = sessionStorage.getItem(\"token\");\n    if (!token) history.push(\"/adminlogin\");\n  }, []);\n\n  let [ques, setQues] = useState(\"\");\n  let [qImg, setQImg] = useState(\"\");\n  let [opA, setOpA] = useState(\"\");\n  let [opB, setOpB] = useState(\"\");\n  let [opC, setOpC] = useState(\"\");\n  let [opD, setOpD] = useState(\"\");\n  let [aImg, setAImg] = useState(false);\n  let [bImg, setBImg] = useState(false);\n  let [cImg, setCImg] = useState(false);\n  let [dImg, setDImg] = useState(false);\n  let [level, setLevel] = useState(\"level1\");\n  let [ans, setAns] = useState(\"optionA\");\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Add New Question</h1>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            let token = sessionStorage.getItem(\"token\");\n            let data = {\n              question: ques,\n              optionA: opA,\n              aImg: aImg,\n              optionB: opB,\n              bImg: bImg,\n              optionC: opC,\n              cImg: cImg,\n              optionD: opD,\n              dImg: dImg,\n              answerOption: ans,\n              levelTag: level,\n            };\n\n            if (qImg) {\n              data[\"questionImg\"] = qImg;\n            }\n\n            axios\n              .post(\n                \"https://livioscreeningapi.herokuapp.com/admin/addquestion\",\n                data,\n                {\n                  headers: { Authorization: `Bearer ${token}` },\n                }\n              )\n              .then((res) => {\n                //added\n                console.log(res);\n                alert(\"question added\");\n              })\n              .catch((error) => {\n                console.log(error);\n                alert(\"Error\");\n              });\n          }}\n        >\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={ques}\n              onChange={(e) => {\n                setQues(e.currentTarget.value);\n              }}\n              placeholder=\"Question\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={qImg}\n              onChange={(e) => {\n                setQImg(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Question Image URL\"\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={opA}\n              onChange={(e) => {\n                setOpA(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option A\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              className=\"form-check-input\"\n              checked={aImg}\n              onChange={() => {\n                setAImg(!aImg);\n              }}\n              type=\"checkbox\"\n              id=\"optionA\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionA\">\n              Option A is image\n            </label>\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={opB}\n              onChange={(e) => {\n                setOpB(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option B\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              checked={bImg}\n              onChange={() => {\n                setBImg(!bImg);\n              }}\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"optionB\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionB\">\n              Option B is image\n            </label>\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={opC}\n              onChange={(e) => {\n                setOpC(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option C\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              className=\"form-check-input\"\n              checked={cImg}\n              onChange={() => {\n                setCImg(!cImg);\n              }}\n              type=\"checkbox\"\n              id=\"optionC\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionC\">\n              Option C is image\n            </label>\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={opD}\n              onChange={(e) => {\n                setOpD(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option D\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              className=\"form-check-input\"\n              checked={dImg}\n              onChange={() => {\n                setDImg(!dImg);\n              }}\n              type=\"checkbox\"\n              id=\"optionD\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionD\">\n              Option D is image\n            </label>\n          </div>\n          <select\n            className=\"form-select mb-3\"\n            value={level}\n            onChange={(e) => {\n              setLevel(e.currentTarget.value);\n            }}\n          >\n            <option value=\"level1\">Level: level 1</option>\n            <option value=\"level2\">Level: level 2</option>\n            <option value=\"level3\">Level: level 3</option>\n            <option value=\"level4\">Level: level 4</option>\n            <option value=\"level5\">Level: level 5</option>\n          </select>\n          <select\n            className=\"form-select mb-3\"\n            value={ans}\n            onChange={(e) => {\n              setAns(e.currentTarget.value);\n            }}\n          >\n            <option value=\"optionA\">Answer is option A</option>\n            <option value=\"optionB\">Answer is option B</option>\n            <option value=\"optionC\">Answer is option C</option>\n            <option value=\"optionD\">Answer is option D</option>\n          </select>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default AddQuestion;\n","import { useHistory } from \"react-router\";\nimport { useState } from \"react\";\n\nlet OtpCheck = ({ otp, setOtp, setTest, setUser }) => {\n  let [userOtp, setUserOtp] = useState(\"\");\n  let history = useHistory();\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4 offset-md-4 mt-4\">\n            <h1 style={{ textAlign: \"center\" }}>Email Verification</h1>\n            <form\n              className=\"mt-4\"\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (userOtp == otp) {\n                  history.push(\"/test\");\n                } else {\n                  setUser(null);\n                  setTest(null);\n                  setOtp(null);\n                  alert(\"You've entered the wrong security code\")\n                  history.push(\"/\");\n                }\n              }}\n            >\n              <div className=\"mb-3\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Security Code\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  value={userOtp}\n                  onChange={(e) => {\n                    setUserOtp(e.currentTarget.value);\n                  }}\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary \"\n                style={{ width: \"100%\" }}\n              >\n                Confirm\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OtpCheck;\n","import Navbar from \"./components/Navbar\";\nimport Register from \"./components/Register\";\nimport UserScore from \"./components/UserScore\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Adminlogin from \"./components/AdminLogin\";\nimport { useState } from \"react\";\nimport Test from \"./components/Test\";\nimport AdminOptions from \"./components/AdminOptions\";\nimport DeleteQuestion from \"./components/DeleteQuestion\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport OtpCheck from './components/OtpCheck'\nlet App = () => {\n  let [user, setUser] = useState(null);\n  let [test, setTest] = useState(null);\n  let [otp, setOtp] = useState(null);\n  let [testScore, setTestScore] = useState({\n    level1: 0,\n    level2: 0,\n    level3: 0,\n    level4: 0,\n    level5: 0,\n  });\n  let [hiringManagerEmail, setHiringManagerEmail] = useState(null);\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/adminlogin\">\n            <Navbar />\n            <Adminlogin />\n          </Route>\n          <Route path=\"/adminoptions\">\n            <Navbar />\n            <AdminOptions />\n          </Route>\n          <Route path=\"/adminadd\">\n            <Navbar />\n            <AddQuestion />\n          </Route>\n          <Route path=\"/admindelete\">\n            <Navbar />\n            <DeleteQuestion />\n          </Route>\n          <Route path=\"/adminscore\">\n            <Navbar />\n          </Route>\n          <Route path=\"/test\">\n            <Test\n              test={test}\n              testScore={testScore}\n              user={user}\n              setTestScore={setTestScore}\n            />\n          </Route>\n          <Route path=\"/userscore\">\n            <Navbar />\n            <UserScore\n              user={user}\n              testScore={testScore}\n              hiringManagerEmail={hiringManagerEmail}\n            />\n          </Route>\n          <Route path=\"/otp\">\n            <Navbar />\n            <OtpCheck\n              otp={otp}\n              setUser={setUser}\n              setTest={setTest}\n              setOtp={setOtp}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Navbar />\n            <Register\n              setHiringManagerEmail={setHiringManagerEmail}\n              setUser={setUser}\n              setTest={setTest}\n              setOtp={setOtp}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}