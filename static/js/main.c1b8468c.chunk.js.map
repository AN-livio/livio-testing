{"version":3,"sources":["components/Navbar.jsx","components/Spinner.jsx","components/Register.jsx","components/UserScore.jsx","components/AdminLogin.jsx","components/Option.jsx","components/Test.jsx","components/AdminOptions.jsx","components/EditQuestion.jsx","components/ViewQuestion.jsx","components/AllQuestions.jsx","components/AddQuestion.jsx","components/OtpCheck.jsx","App.js","index.js"],"names":["Navbar","className","to","type","id","style","color","textDecoration","Spinner","height","role","Register","setTest","setUser","setHiringManagerEmail","setOtp","useState","email","setEmail","name","setName","college","setCollege","phone","setPhone","loading","setLoading","history","useHistory","query","URLSearchParams","useLocation","search","useEffect","get","textAlign","onSubmit","e","preventDefault","axios","post","then","response","data","user","test","otp","push","catch","error","alert","console","log","placeholder","value","onChange","currentTarget","width","UserScore","testScore","hiringManagerEmail","submitted","setSubmitted","resume","setResume","uploadURL","setUploadURL","uploading","setUploading","uploaded","setUploaded","totalScore","formattedScoreForApi","x","i","dataToBeSent","individualScore","String","toLowerCase","res","url","class","file","files","fileType","split","size","toFixed","onClick","a","fetch","method","headers","body","resumeURL","AdminLogin","password","setPassword","sessionStorage","getItem","setItem","token","Option","question","alpha","selectedOption","setSelectedOption","_id","toUpperCase","checked","userAns","htmlfor","src","copiedUrl","trim","intermediate","genImgUrl","alt","msToTime","duration","seconds","parseInt","minutes","hours","Test","setTestScore","qNo","setQNo","timeLeft","setTimeLeft","warningLeft","setWarningLeft","onBlur","level1","level2","level3","level4","level5","window","addEventListener","removeEventListener","setTimeout","clearTimeout","questionImg","objectFit","map","el","level","levelTag","newScore","answerOption","AdminOptions","Authorization","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","click","clear","useQuery","EditQuestion","setQues","setQImg","optionA","setOpA","optionB","setOpB","optionC","setOpC","optionD","setOpD","aImg","setAImg","bImg","setBImg","cImg","setCImg","dImg","setDImg","setLevel","setAns","getQuestionReq","htmlFor","ViewQuestion","setQuestion","replace","AllQuestions","questions","setQuestions","getQuestionsReq","scope","index","AddQuestion","ques","qImg","opA","opB","opC","opD","ans","OtpCheck","userOtp","setUserOtp","App","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c1b8468c.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nlet Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-4\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          LIVIO Screening\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarText\"\n          aria-controls=\"navbarText\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\"></ul>\n          <Link\n            to=\"/adminlogin\"\n            style={{ color: \"#ffffff8c\", textDecoration: \"none\" }}\n          >\n            <span className=\"navbar-text\">Admin</span>\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","let Spinner = () => {\n  return (\n    <>\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: \"80vh\" }}\n      >\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Spinner;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"./Spinner\";\nimport { useHistory, useLocation } from \"react-router\";\n\nlet useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nlet Register = ({ setTest, setUser, setHiringManagerEmail, setOtp }) => {\n  let [email, setEmail] = useState(\"\");\n  let [name, setName] = useState(\"\");\n  let [college, setCollege] = useState(\"\");\n  let [phone, setPhone] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let history = useHistory();\n  let query = useQuery();\n\n  //make the fields required\n\n  useEffect(() => {\n    if (query.get(\"email\")) {\n      setHiringManagerEmail(query.get(\"email\"));\n    }\n  }, []);\n\n  return (\n    <>\n      {!loading ? (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-4\">\n              <h1 className=\"mb-4\" style={{ textAlign: \"center\" }}>\n                Instructions\n              </h1>\n              <ol>\n                <li>\n                  This is the first step to apply for a job at Livio Building\n                  Systems. Fill your required details.\n                </li>\n                <li>\n                  After providing the required details, click on{\" \"}\n                  <b>Start Test</b>. A security code will be sent to your given\n                  email to verify the email. Enter the code, this will begin a\n                  puzzle test which will contain 10 questions. You'll have 15\n                  minutes to complete it. If you enter the wrong security code\n                  you'll be taken back to starting screen.\n                </li>\n                <li>\n                  Remember you'll not be able to go back to previous question\n                  once you skip it.\n                </li>\n                <li>\n                  Once you've completed the test you'll be taken to{\" \"}\n                  <b>Thank you </b>\n                  screen and our HR and hiring manager will receive your test\n                  score and the details provided by you.\n                </li>\n              </ol>\n              <hr />\n              <h4>Note:</h4>\n              <ol>\n                <li>Do not try to click outside the browser window.</li>\n                <li>Do not use keyboard shortcuts.</li>\n                <li>\n                  Your test will be automatically submitted if you click outside\n                  the browser more than 3 times.\n                </li>\n              </ol>\n              <ul></ul>\n            </div>\n            <div className=\"col-md-4 offset-md-2 mt-4\">\n              <h1 style={{ textAlign: \"center\" }}>Start Your Application</h1>\n              <form\n                className=\"mt-4\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setLoading(true);\n                  axios\n                    .post(\n                      \"https://livioscreeningapi.herokuapp.com/screening/new\",\n                      {\n                        email,\n                        phone,\n                        college,\n                        name,\n                      }\n                    )\n                    .then((response) => {\n                      let { user, test, otp } = response.data;\n                      setUser(user);\n                      setTest(test);\n                      setOtp(otp);\n                      setLoading(false);\n                      history.push(\"/otp\");\n                      // history.push(\"/test\");\n                    })\n                    .catch((error) => {\n                      setLoading(false);\n                      alert(\"Please fill all the required details\");\n                      history.push(\"/\");\n                      console.log(error);\n                    });\n                }}\n              >\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Full Name\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    value={name}\n                    onChange={(e) => {\n                      setName(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    placeholder=\"Email Address\"\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"email\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    placeholder=\"Phone Number\"\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"phone\"\n                    value={phone}\n                    onChange={(e) => {\n                      setPhone(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"College (Optional)\"\n                    className=\"form-control\"\n                    id=\"college\"\n                    value={college}\n                    onChange={(e) => {\n                      setCollege(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary \"\n                  style={{ width: \"100%\" }}\n                >\n                  Start Test\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default Register;\n","import { Redirect } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nlet validateEmail = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nlet UserScore = ({ user, testScore, hiringManagerEmail }) => {\n  let [submitted, setSubmitted] = useState(false);\n  let [resume, setResume] = useState(null);\n  let [uploadURL, setUploadURL] = useState(\"\");\n  let [uploading, setUploading] = useState(false);\n  let [uploaded, setUploaded] = useState(false);\n  useEffect(() => {\n    let totalScore = 0;\n    let formattedScoreForApi = [];\n    for (let x in testScore) {\n      totalScore += testScore[x];\n    }\n    for (let i = 1; i <= 5; i++) {\n      formattedScoreForApi[i - 1] = testScore[`level${i}`];\n    }\n\n    let dataToBeSent = {\n      email: user.email,\n      individualScore: formattedScoreForApi,\n      totalScore,\n    };\n\n    if (hiringManagerEmail && validateEmail(hiringManagerEmail)) {\n      dataToBeSent.hiringManagerEmail = hiringManagerEmail;\n    }\n\n    console.log(dataToBeSent);\n\n    axios\n      .post(\n        \"https://livioscreeningapi.herokuapp.com/screening/submit\",\n        dataToBeSent\n      )\n      .then((res) => {\n        setUploadURL(res.data.url);\n        setSubmitted(true);\n      })\n      .catch((error) => {\n        alert(\"Error!\");\n        console.log(error);\n      });\n  }, []);\n  return (\n    <>\n      {user ? (\n        <div className=\"container p-4\">\n          <h5>{user.name}</h5>\n          <h5>{user.email}</h5>\n          <hr />\n          {submitted ? (\n            <>\n              <h2>\n                {uploading && !uploaded\n                  ? \"Your resume is being uploaded...\"\n                  : \"\"}\n                {!uploading && uploaded\n                  ? \"Thank you for applying to Livio.\"\n                  : \"\"}\n\n                {!uploaded && !uploading\n                  ? \"Please upload your resume below for futher process.\"\n                  : \"\"}\n              </h2>\n              {!uploaded && !uploading ? (\n                <>\n                  <div className=\"row\">\n                    <div className=\"col-4\">\n                      <div class=\"mb-3 mt-3\">\n                        <input\n                          class=\"form-control\"\n                          type=\"file\"\n                          id=\"formFile\"\n                          onChange={(e) => {\n                            let file = e.currentTarget.files[0];\n                            let fileType = file.type.split(\"/\")[1];\n                            let fileSizeInMb = (\n                              file.size /\n                              (1024 * 1024)\n                            ).toFixed(2);\n                            if (fileSizeInMb > 1) {\n                              alert(\"Error: File size exceeds 1 mb\");\n                              e.currentTarget.value = null;\n                              setResume(null);\n                            } else if (fileType != \"pdf\") {\n                              alert(\"Error: File is not a pdf\");\n                              e.currentTarget.value = null;\n                              setResume(null);\n                            } else {\n                              setResume(file);\n                            }\n                          }}\n                        />\n                        <button\n                          onClick={async () => {\n                            if (resume && uploadURL && !uploaded) {\n                              setUploading(true);\n                              await fetch(uploadURL, {\n                                method: \"PUT\",\n                                headers: {\n                                  \"Content-Type\": \"multipart/form-data\",\n                                },\n                                body: resume,\n                              });\n                              setUploading(false);\n                              setUploaded(true);\n\n                              const resumeURL = uploadURL.split(\"?\")[0];\n\n                              let { name, email } = user;\n                              console.log(hiringManagerEmail);\n                              //send email to hr and hm with link and\n\n                              axios\n                                .post(\n                                  \"https://livioscreeningapi.herokuapp.com/screening/resume\",\n                                  { name, email, resumeURL, hiringManagerEmail }\n                                )\n                                .then(() => {\n                                  console.log(\"resume uploaded\");\n                                })\n                                .catch((error) => {\n                                  alert(\"Error!\");\n                                  console.log(error);\n                                });\n                            }\n                          }}\n                          className=\"btn btn-primary mt-3\"\n                        >\n                          Upload\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                \"\"\n              )}\n            </>\n          ) : (\n            <h2>Please wait while we submit your test.</h2>\n          )}\n        </div>\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </>\n  );\n};\n\nexport default UserScore;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"./Spinner\";\nimport { useHistory } from \"react-router\";\n\nlet AdminLogin = () => {\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let history = useHistory();\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) history.push(\"/adminoptions\");\n  }, []);\n  return (\n    <>\n      {!loading ? (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4 offset-md-4 mt-4\">\n              <h1 className=\"mt-4 mb-4\" style={{ textAlign: \"center\" }}>\n                Admin login\n              </h1>\n              <form\n                className=\"mt-4\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setLoading(true);\n                  axios\n                    .post(\n                      \"https://livioscreeningapi.herokuapp.com/admin/login\",\n                      {\n                        email,\n                        password,\n                      }\n                    )\n                    .then((response) => {\n                      sessionStorage.setItem(\"token\", response.data.token);\n                      setLoading(false);\n                      history.push(\"/adminoptions\");\n                    })\n                    .catch((error) => {\n                      console.log(error);\n                      setLoading(false);\n                    });\n                }}\n              >\n                <div className=\"mb-3\">\n                  <input\n                    placeholder=\"Email Address\"\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"form-control\"\n                    value={password}\n                    onChange={(e) => {\n                      setPassword(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary \"\n                  style={{ width: \"100%\" }}\n                >\n                  Login\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default AdminLogin;\n","let Option = ({ question, alpha, selectedOption, setSelectedOption }) => {\n  let genImgUrl = (copiedUrl) => {\n    copiedUrl = copiedUrl.trim();\n    if (copiedUrl) {\n      let intermediate = copiedUrl.split(\"https://drive.google.com/file/d/\")[1];\n      if (intermediate) {\n        let id = intermediate.split(\"/view\")[0];\n        return \"https://drive.google.com/uc?export=view&id=\" + id;\n      }\n    }\n    return \"\";\n  };\n  return (\n    <div className=\"form-check\">\n      <input\n        className=\"form-check-input\"\n        type=\"radio\"\n        name={\"ans\" + question._id}\n        value={`option${alpha.toUpperCase()}`}\n        checked={\n          selectedOption === `option${alpha.toUpperCase()}` ? true : false\n        }\n        onChange={(e) => {\n          let userAns = e.currentTarget.value;\n          setSelectedOption(userAns);\n        }}\n        id={question._id + alpha}\n      />\n      <label className=\"form-check-label\" htmlfor={question._id}>\n        {question[`${alpha}Img`] ? (\n          <img\n            style={{ height: \"20vh\" }}\n            src={genImgUrl(question[`option${alpha.toUpperCase()}`])}\n            alt=\"option\"\n          />\n        ) : (\n          question[`option${alpha.toUpperCase()}`]\n        )}\n      </label>\n    </div>\n  );\n};\n\nexport default Option;\n","import { useEffect, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router\";\nimport Option from \"./Option\";\n\nlet msToTime = (duration) => {\n  let seconds = parseInt((duration / 1000) % 60),\n    minutes = parseInt((duration / (1000 * 60)) % 60),\n    hours = parseInt((duration / (1000 * 60 * 60)) % 24);\n\n  hours = hours < 10 ? \"0\" + hours : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n  return hours + \":\" + minutes + \":\" + seconds;\n};\n\nlet Test = ({ test, testScore, setTestScore }) => {\n  let [qNo, setQNo] = useState(1);\n  let [timeLeft, setTimeLeft] = useState(15 * 60 * 1000);\n\n  let options = [\"a\", \"b\", \"c\", \"d\"];\n  let [selectedOption, setSelectedOption] = useState(false);\n  let [warningLeft, setWarningLeft] = useState(3);\n  let history = useHistory();\n  let genImgUrl = (copiedUrl) => {\n    copiedUrl = copiedUrl.trim();\n    if (copiedUrl) {\n      let intermediate = copiedUrl.split(\"https://drive.google.com/file/d/\")[1];\n      if (intermediate) {\n        let id = intermediate.split(\"/view\")[0];\n        return \"https://drive.google.com/uc?export=view&id=\" + id;\n      }\n    }\n    return \"\";\n  };\n\n  const onBlur = () => {\n    if (warningLeft > 0) {\n      alert(\n        \"Click outside test area detected! After \" +\n          warningLeft +\n          \" clicks, your test will be automatically submitted\"\n      );\n    }\n    setWarningLeft(warningLeft - 1);\n    if (warningLeft <= 0) {\n      history.push(\"/userscore\");\n    }\n  };\n\n  useEffect(() => {\n    setTestScore({\n      level1: 0,\n      level2: 0,\n      level3: 0,\n      level4: 0,\n      level5: 0,\n    });\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"blur\", onBlur);\n    return () => {\n      window.removeEventListener(\"blur\", onBlur);\n    };\n  });\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1000);\n      } else {\n        history.push(\"/userscore\");\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [timeLeft]);\n\n  return (\n    <>\n      {qNo > 10 ? (\n        <Redirect to=\"/userscore\" />\n      ) : (\n        <>\n          {test ? (\n            <div className=\"container p-4\">\n              <p>{msToTime(timeLeft)}</p>\n              <h2>\n                Q{qNo}- {test[qNo - 1].question}\n              </h2>\n              {test[qNo - 1].questionImg ? (\n                <img\n                  style={{\n                    height: \"45vh\",\n                    width: \"80vw\",\n                    objectFit: \"contain\",\n                  }}\n                  src={genImgUrl(test[qNo - 1].questionImg)}\n                  alt=\"question\"\n                />\n              ) : (\n                \"\"\n              )}\n              <div className=\"mt-4\">\n                {options.map((el) => (\n                  <Option\n                    key={el}\n                    question={test[qNo - 1]}\n                    alpha={el}\n                    setTestScore={setTestScore}\n                    testScore={testScore}\n                    selectedOption={selectedOption}\n                    setSelectedOption={setSelectedOption}\n                  />\n                ))}\n              </div>\n              <button\n                className=\"btn btn-primary mt-4 mb-4\"\n                onClick={() => {\n                  let level = test[qNo - 1].levelTag;\n                  let newScore = { ...testScore };\n                  if (test[qNo - 1].answerOption === selectedOption) {\n                    newScore[level] = testScore[level] + 1;\n                  }\n                  setTestScore(newScore);\n                  setSelectedOption(false);\n\n                  setQNo(qNo + 1);\n                }}\n              >\n                Next\n              </button>\n            </div>\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Test;\n","import { useHistory } from \"react-router\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nlet AdminOptions = () => {\n  let history = useHistory();\n\n  useEffect(() => {\n    let token = sessionStorage.getItem(\"token\");\n    if (!token) history.push(\"/adminlogin\");\n  }, []);\n\n  return (\n    <>\n      <button\n        className=\"btn btn-primary m-4\"\n        onClick={() => {\n          let token = sessionStorage.getItem(\"token\");\n          axios\n            .get(\"https://livioscreeningapi.herokuapp.com/admin/getcsv\", {\n              headers: { Authorization: `Bearer ${token}` },\n            })\n            .then((response) => {\n              const url = window.URL.createObjectURL(new Blob([response.data]));\n              const link = document.createElement(\"a\");\n              link.href = url;\n              link.setAttribute(\"download\", \"results.csv\"); \n              link.click();\n            })\n            .catch((error) => {\n              alert(\"Error\");\n              console.log(error);\n            });\n        }}\n      >\n        Download Results\n      </button>\n      <br />\n      <button\n        className=\"btn btn-primary m-4\"\n        onClick={() => {\n          history.push(\"/adminquestions\");\n        }}\n      >\n        All Questions\n      </button>\n      <br />\n      <button\n        className=\"btn btn-primary m-4\"\n        onClick={() => {\n          history.push(\"/adminadd\");\n        }}\n      >\n        Add Question\n      </button>\n      <br />\n      <button\n        className=\"btn btn-primary m-4\"\n        onClick={() => {\n          let token = sessionStorage.getItem(\"token\");\n          axios\n            .post(\n              \"https://livioscreeningapi.herokuapp.com/admin/logout\",\n              {},\n              {\n                headers: { Authorization: `Bearer ${token}` },\n              }\n            )\n            .then(() => {\n              sessionStorage.clear();\n              history.push(\"/adminlogin\");\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        }}\n      >\n        logout\n      </button>\n    </>\n  );\n};\n\nexport default AdminOptions;\n","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport axios from \"axios\";\n\nlet EditQuestion = () => {\n  let history = useHistory();\n  let query = useQuery();\n\n  let [question, setQues] = useState(\"\");\n  let [questionImg, setQImg] = useState(\"\");\n  let [optionA, setOpA] = useState(\"\");\n  let [optionB, setOpB] = useState(\"\");\n  let [optionC, setOpC] = useState(\"\");\n  let [optionD, setOpD] = useState(\"\");\n  let [aImg, setAImg] = useState(false);\n  let [bImg, setBImg] = useState(false);\n  let [cImg, setCImg] = useState(false);\n  let [dImg, setDImg] = useState(false);\n  let [level, setLevel] = useState(\"\");\n  let [answerOption, setAns] = useState(\"\");\n\n  let getQuestionReq = (id) => {\n    let token = sessionStorage.getItem(\"token\");\n    axios\n      .get(\"https://livioscreeningapi.herokuapp.com/admin/getq?id=\" + id, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setQues(response.data.question.question);\n        setQImg(response.data.question.questionImg);\n        setOpA(response.data.question.optionA);\n        setOpB(response.data.question.optionB);\n        setOpC(response.data.question.optionC);\n        setOpD(response.data.question.optionD);\n        setAImg(response.data.question.aImg);\n        setBImg(response.data.question.bImg);\n        setCImg(response.data.question.cImg);\n        setDImg(response.data.question.dImg);\n        setLevel(response.data.question.levelTag);\n        setAns(response.data.question.answerOption);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    let token = sessionStorage.getItem(\"token\");\n    if (!token) history.push(\"/adminlogin\");\n\n    if (query.get(\"id\")) {\n      getQuestionReq(query.get(\"id\"));\n    } else {\n      history.push(\"/adminquestions\");\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Edit Question</h1>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            let token = sessionStorage.getItem(\"token\");\n            let data = {\n              question: question,\n              optionA: optionA,\n              aImg: aImg,\n              optionB: optionB,\n              bImg: bImg,\n              optionC: optionC,\n              cImg: cImg,\n              optionD: optionD,\n              dImg: dImg,\n              answerOption: answerOption,\n              levelTag: level,\n            };\n\n            if (questionImg) {\n              data[\"questionImg\"] = questionImg;\n            }\n\n            axios\n              .post(\"https://livioscreeningapi.herokuapp.com/admin/modifyquestion\", data, {\n                headers: { Authorization: `Bearer ${token}` },\n              })\n              .then((res) => {\n                alert(\"question modified\");\n                history.push(\"/adminquestions\")\n              })\n              .catch((error) => {\n                console.log(error);\n                alert(\"Error\");\n              });\n          }}\n        >\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={question}\n              onChange={(e) => {\n                setQues(e.currentTarget.value);\n              }}\n              placeholder=\"Question\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={questionImg}\n              onChange={(e) => {\n                setQImg(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Question Image URL\"\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={optionA}\n              onChange={(e) => {\n                setOpA(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option A\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              className=\"form-check-input\"\n              checked={aImg}\n              onChange={() => {\n                setAImg(!aImg);\n              }}\n              type=\"checkbox\"\n              id=\"optionA\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionA\">\n              Option A is image\n            </label>\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={optionB}\n              onChange={(e) => {\n                setOpB(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option B\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              checked={bImg}\n              onChange={() => {\n                setBImg(!bImg);\n              }}\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"optionB\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionB\">\n              Option B is image\n            </label>\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={optionC}\n              onChange={(e) => {\n                setOpC(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option C\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              className=\"form-check-input\"\n              checked={cImg}\n              onChange={() => {\n                setCImg(!cImg);\n              }}\n              type=\"checkbox\"\n              id=\"optionC\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionC\">\n              Option C is image\n            </label>\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={optionD}\n              onChange={(e) => {\n                setOpD(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option D\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              className=\"form-check-input\"\n              checked={dImg}\n              onChange={() => {\n                setDImg(!dImg);\n              }}\n              type=\"checkbox\"\n              id=\"optionD\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionD\">\n              Option D is image\n            </label>\n          </div>\n          <select\n            className=\"form-select mb-3\"\n            value={level}\n            onChange={(e) => {\n              setLevel(e.currentTarget.value);\n            }}\n          >\n            <option value=\"level1\">Level: level 1</option>\n            <option value=\"level2\">Level: level 2</option>\n            <option value=\"level3\">Level: level 3</option>\n            <option value=\"level4\">Level: level 4</option>\n            <option value=\"level5\">Level: level 5</option>\n          </select>\n          <select\n            className=\"form-select mb-3\"\n            value={answerOption}\n            onChange={(e) => {\n              setAns(e.currentTarget.value);\n            }}\n          >\n            <option value=\"optionA\">Answer is option A</option>\n            <option value=\"optionB\">Answer is option B</option>\n            <option value=\"optionC\">Answer is option C</option>\n            <option value=\"optionD\">Answer is option D</option>\n          </select>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n          <br />\n          <br />\n          <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                history.push(\"/adminquestions\");\n              }}\n            >\n              Back\n            </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nlet useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nexport default EditQuestion;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory, useLocation } from \"react-router\";\n\nlet ViewQuestion = () => {\n  let query = useQuery();\n  let history = useHistory();\n  let [question, setQuestion] = useState({});\n\n  let getQuestionReq = (id) => {\n    let token = sessionStorage.getItem(\"token\");\n    axios\n      .get(\"https://livioscreeningapi.herokuapp.com/admin/getq?id=\" + id, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setQuestion(response.data.question);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  let genImgUrl = (copiedUrl) => {\n    copiedUrl = copiedUrl.trim();\n    if (copiedUrl) {\n      let intermediate = copiedUrl.split(\"https://drive.google.com/file/d/\")[1];\n      if (intermediate) {\n        let id = intermediate.split(\"/view\")[0];\n        return \"https://drive.google.com/uc?export=view&id=\" + id;\n      }\n    }\n    return \"\";\n  };\n\n  useEffect(() => {\n    let token = sessionStorage.getItem(\"token\");\n    if (!token) history.push(\"/adminlogin\");\n\n    if (query.get(\"id\")) {\n      getQuestionReq(query.get(\"id\"));\n    } else {\n      history.push(\"/adminquestions\");\n    }\n  }, []);\n  return (\n    <>\n      {question.levelTag && question.answerOption ? (\n        <>\n          <div className=\"container\">\n            <h3>{question.question}</h3>\n            <p>({`Level - ${question.levelTag.replace(\"level\", \"\")}`})</p>\n            {question.questionImg ? (\n              <>\n                <img src={genImgUrl(question.questionImg)} />\n              </>\n            ) : (\n              \"\"\n            )}\n            <h4>Options:</h4>\n            {[\"a\", \"b\", \"c\", \"d\"].map((el) => {\n              if (question[`${el}Img`]) {\n                return <img src={genImgUrl(question[`${el}Img`])} />;\n              } else {\n                return (\n                  <p>\n                    {el}) {question[\"option\" + el.toUpperCase()]}{\" \"}\n                  </p>\n                );\n              }\n            })}\n            <h4>\n              Answer- {`Option ${question.answerOption.replace(\"option\", \"\")}`}\n            </h4>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                history.push(\"/adminquestions\");\n              }}\n            >\n              Back\n            </button>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nlet useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nexport default ViewQuestion;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nlet AllQuestions = () => {\n  let [questions, setQuestions] = useState([]);\n  let history = useHistory();\n  useEffect(() => {\n    let token = sessionStorage.getItem(\"token\");\n    if (!token) history.push(\"/adminlogin\");\n    getQuestionsReq();\n  }, []);\n  let getQuestionsReq = () => {\n    let token = sessionStorage.getItem(\"token\");\n    axios\n      .get(\"https://livioscreeningapi.herokuapp.com/admin/getquestions\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setQuestions(response.data.questions);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-8 offset-2\">\n          <h1>All Questions</h1>\n          <table class=\"table \">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Question</th>\n                <th scope=\"col\">Level</th>\n                <th scope=\"col\"></th>\n                <th scope=\"col\"></th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr></tr>\n              {questions.map((el, index) => (\n                <tr>\n                  <td>{index + 1}</td>\n                  <td>{el.question}</td>\n                  <td>{el.levelTag}</td>\n                  <td>\n                    <button\n                      class=\"btn btn-danger\"\n                      onClick={() => {\n                        let token = sessionStorage.getItem(\"token\");\n                        axios\n                          .post(\n                            \"https://livioscreeningapi.herokuapp.com/aAll\",\n                            {\n                              _id: el._id,\n                            },\n                            {\n                              headers: { Authorization: `Bearer ${token}` },\n                            }\n                          )\n                          .then(() => {\n                            getQuestionsReq();\n                          })\n                          .catch((error) => {\n                            console.log(error);\n                          });\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      class=\"btn btn-primary\"\n                      onClick={() => {\n                        history.push(\"/adminviewquestion?id=\" + el._id);\n                      }}\n                    >\n                      View\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      class=\"btn btn-primary\"\n                      onClick={() => {\n                        history.push(\"/admineditquestion?id=\" + el._id);\n                      }}\n                    >\n                      Edit\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AllQuestions;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\n\nlet AddQuestion = () => {\n  let history = useHistory();\n\n \n\n  useEffect(() => {\n    let token = sessionStorage.getItem(\"token\");\n    if (!token) history.push(\"/adminlogin\");\n  }, []);\n\n  let [ques, setQues] = useState(\"\");\n  let [qImg, setQImg] = useState(\"\");\n  let [opA, setOpA] = useState(\"\");\n  let [opB, setOpB] = useState(\"\");\n  let [opC, setOpC] = useState(\"\");\n  let [opD, setOpD] = useState(\"\");\n  let [aImg, setAImg] = useState(false);\n  let [bImg, setBImg] = useState(false);\n  let [cImg, setCImg] = useState(false);\n  let [dImg, setDImg] = useState(false);\n  let [level, setLevel] = useState(\"level1\");\n  let [ans, setAns] = useState(\"optionA\");\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Add New Question</h1>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            let token = sessionStorage.getItem(\"token\");\n            let data = {\n              question: ques,\n              optionA: opA,\n              aImg: aImg,\n              optionB: opB,\n              bImg: bImg,\n              optionC: opC,\n              cImg: cImg,\n              optionD: opD,\n              dImg: dImg,\n              answerOption: ans,\n              levelTag: level,\n            };\n\n            if (qImg) {\n              data[\"questionImg\"] = qImg;\n            }\n\n            axios\n              .post(\n                \"https://livioscreeningapi.herokuapp.com/admin/addquestion\",\n                data,\n                {\n                  headers: { Authorization: `Bearer ${token}` },\n                }\n              )\n              .then((res) => {\n                //added\n                console.log(res);\n                alert(\"question added\");\n              })\n              .catch((error) => {\n                console.log(error);\n                alert(\"Error\");\n              });\n          }}\n        >\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={ques}\n              onChange={(e) => {\n                setQues(e.currentTarget.value);\n              }}\n              placeholder=\"Question\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={qImg}\n              onChange={(e) => {\n                setQImg(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Question Image URL\"\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={opA}\n              onChange={(e) => {\n                setOpA(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option A\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              className=\"form-check-input\"\n              checked={aImg}\n              onChange={() => {\n                setAImg(!aImg);\n              }}\n              type=\"checkbox\"\n              id=\"optionA\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionA\">\n              Option A is image\n            </label>\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={opB}\n              onChange={(e) => {\n                setOpB(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option B\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              checked={bImg}\n              onChange={() => {\n                setBImg(!bImg);\n              }}\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"optionB\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionB\">\n              Option B is image\n            </label>\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={opC}\n              onChange={(e) => {\n                setOpC(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option C\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              className=\"form-check-input\"\n              checked={cImg}\n              onChange={() => {\n                setCImg(!cImg);\n              }}\n              type=\"checkbox\"\n              id=\"optionC\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionC\">\n              Option C is image\n            </label>\n          </div>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              value={opD}\n              onChange={(e) => {\n                setOpD(e.currentTarget.value);\n              }}\n              className=\"form-control\"\n              placeholder=\"Option D\"\n            />\n          </div>\n          <div className=\"form-check mb-3\">\n            <input\n              className=\"form-check-input\"\n              checked={dImg}\n              onChange={() => {\n                setDImg(!dImg);\n              }}\n              type=\"checkbox\"\n              id=\"optionD\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"optionD\">\n              Option D is image\n            </label>\n          </div>\n          <select\n            className=\"form-select mb-3\"\n            value={level}\n            onChange={(e) => {\n              setLevel(e.currentTarget.value);\n            }}\n          >\n            <option value=\"level1\">Level: level 1</option>\n            <option value=\"level2\">Level: level 2</option>\n            <option value=\"level3\">Level: level 3</option>\n            <option value=\"level4\">Level: level 4</option>\n            <option value=\"level5\">Level: level 5</option>\n          </select>\n          <select\n            className=\"form-select mb-3\"\n            value={ans}\n            onChange={(e) => {\n              setAns(e.currentTarget.value);\n            }}\n          >\n            <option value=\"optionA\">Answer is option A</option>\n            <option value=\"optionB\">Answer is option B</option>\n            <option value=\"optionC\">Answer is option C</option>\n            <option value=\"optionD\">Answer is option D</option>\n          </select>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default AddQuestion;\n","import { useHistory } from \"react-router\";\nimport { useState } from \"react\";\n\nlet OtpCheck = ({ otp, setOtp, setTest, setUser }) => {\n  let [userOtp, setUserOtp] = useState(\"\");\n  let history = useHistory();\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4 offset-md-4 mt-4\">\n            <h1 style={{ textAlign: \"center\" }}>Email Verification</h1>\n            <form\n              className=\"mt-4\"\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (userOtp == otp) {\n                  history.push(\"/test\");\n                } else {\n                  setUser(null);\n                  setTest(null);\n                  setOtp(null);\n                  alert(\"You've entered the wrong security code\")\n                  history.push(\"/\");\n                }\n              }}\n            >\n              <div className=\"mb-3\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Security Code\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  value={userOtp}\n                  onChange={(e) => {\n                    setUserOtp(e.currentTarget.value);\n                  }}\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary \"\n                style={{ width: \"100%\" }}\n              >\n                Confirm\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OtpCheck;\n","import Navbar from \"./components/Navbar\";\nimport Register from \"./components/Register\";\nimport UserScore from \"./components/UserScore\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Adminlogin from \"./components/AdminLogin\";\nimport { useState } from \"react\";\nimport Test from \"./components/Test\";\nimport AdminOptions from \"./components/AdminOptions\";\nimport EditQuestion from \"./components/EditQuestion\";\nimport ViewQuestion from \"./components/ViewQuestion\";\nimport AllQuestions from \"./components/AllQuestions\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport OtpCheck from \"./components/OtpCheck\";\nlet App = () => {\n  let [user, setUser] = useState(null);\n  let [test, setTest] = useState(null);\n  let [otp, setOtp] = useState(null);\n  let [testScore, setTestScore] = useState({\n    level1: 0,\n    level2: 0,\n    level3: 0,\n    level4: 0,\n    level5: 0,\n  });\n  let [hiringManagerEmail, setHiringManagerEmail] = useState(null);\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/adminlogin\">\n            <Navbar />\n            <Adminlogin />\n          </Route>\n          <Route path=\"/adminoptions\">\n            <Navbar />\n            <AdminOptions />\n          </Route>\n          <Route path=\"/adminadd\">\n            <Navbar />\n            <AddQuestion />\n          </Route>\n          <Route path=\"/adminquestions\">\n            <Navbar />\n            <AllQuestions />\n          </Route>\n          <Route path=\"/adminviewquestion\">\n            <Navbar />\n            <ViewQuestion />\n          </Route>\n          <Route path=\"/admineditquestion\">\n            <Navbar />\n            <EditQuestion />\n          </Route>\n          <Route path=\"/adminscore\">\n            <Navbar />\n          </Route>\n          <Route path=\"/test\">\n            <Test\n              test={test}\n              testScore={testScore}\n              user={user}\n              setTestScore={setTestScore}\n            />\n          </Route>\n          <Route path=\"/userscore\">\n            <Navbar />\n            <UserScore\n              user={user}\n              testScore={testScore}\n              hiringManagerEmail={hiringManagerEmail}\n            />\n          </Route>\n          <Route path=\"/otp\">\n            <Navbar />\n            <OtpCheck\n              otp={otp}\n              setUser={setUser}\n              setTest={setTest}\n              setOtp={setOtp}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Navbar />\n            <Register\n              setHiringManagerEmail={setHiringManagerEmail}\n              setUser={setUser}\n              setTest={setTest}\n              setOtp={setOtp}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}