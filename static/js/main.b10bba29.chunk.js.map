{"version":3,"sources":["components/Navbar.jsx","components/Spinner.jsx","components/Register.jsx","components/UserScore.jsx","components/AdminLogin.jsx","components/Option.jsx","components/Test.jsx","components/AdminOptions.jsx","components/DeleteQuestion.jsx","App.js","index.js"],"names":["Navbar","className","to","type","id","style","color","textDecoration","Spinner","height","role","Register","setTest","setUser","useState","email","setEmail","name","setName","college","setCollege","phone","setPhone","loading","setLoading","history","useHistory","textAlign","onSubmit","e","preventDefault","axios","post","then","response","data","user","test","push","catch","error","console","log","placeholder","value","onChange","currentTarget","width","UserScore","AdminLogin","password","setPassword","useEffect","sessionStorage","getItem","setItem","token","Option","question","alpha","selectedOption","setSelectedOption","_id","toUpperCase","checked","userAns","htmlfor","src","alt","Test","testScore","setTestScore","qNo","setQNo","level1","level2","level3","level4","level5","questionImg","map","el","onClick","level","levelTag","newScore","answerOption","totalScore","formattedScoreForApi","x","i","individualScore","AdminOptions","headers","Authorization","clear","DeleteQuestion","questions","setQuestions","getQuestionsReq","get","class","scope","index","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b10bba29.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nlet Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-4\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          LIVIO Screening\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarText\"\n          aria-controls=\"navbarText\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\"></ul>\n          <Link\n            to=\"/adminlogin\"\n            style={{ color: \"#ffffff8c\", textDecoration: \"none\" }}\n          >\n            <span className=\"navbar-text\">Admin</span>\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","let Spinner = () => {\n  return (\n    <>\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: \"80vh\" }}\n      >\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Spinner;\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"./Spinner\";\nimport { useHistory } from \"react-router\";\n\nlet Register = ({ setTest, setUser }) => {\n  let [email, setEmail] = useState(\"\");\n  let [name, setName] = useState(\"\");\n  let [college, setCollege] = useState(\"\");\n  let [phone, setPhone] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let history = useHistory();\n  return (\n    <>\n      {!loading ? (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-4 offset-4 mt-4\">\n              <h1 style={{ textAlign: \"center\" }}>Register</h1>\n              <form\n                className=\"mt-4\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setLoading(true);\n                  axios\n                    .post(\n                      \"https://livioscreeningapi.herokuapp.com/screening/new\",\n                      {\n                        email,\n                        phone,\n                        college,\n                        name,\n                      }\n                    )\n                    .then((response) => {\n                      let { user, test } = response.data;\n                      setUser(user);\n                      setTest(test);\n                      setLoading(false);\n                      history.push(\"/test\");\n                    })\n                    .catch((error) => {\n                      console.log(error);\n                    });\n                }}\n              >\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    value={name}\n                    onChange={(e) => {\n                      setName(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    placeholder=\"Email Address\"\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"email\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    placeholder=\"Phone Number\"\n                    type=\"number\"\n                    className=\"form-control\"\n                    id=\"phone\"\n                    value={phone}\n                    onChange={(e) => {\n                      setPhone(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"College\"\n                    className=\"form-control\"\n                    id=\"college\"\n                    value={college}\n                    onChange={(e) => {\n                      setCollege(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary \"\n                  style={{ width: \"100%\" }}\n                >\n                  Start Test\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default Register;\n","let UserScore = ({ user }) => {\n  return (\n    <>\n      <div className=\"container p-4\">\n        <h5>{user.name}</h5>\n        <h5>{user.email}</h5>\n        <hr />\n        <p>Thank you for applying to Livio. Your Test has been submitted</p>\n      </div>\n    </>\n  );\n};\n\nexport default UserScore;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"./Spinner\";\nimport { useHistory } from \"react-router\";\n\nlet AdminLogin = () => {\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let history = useHistory();\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) history.push(\"/adminoptions\");\n  }, []);\n  return (\n    <>\n      {!loading ? (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-4 offset-4 mt-4\">\n              <h1 className=\"mt-4 mb-4\" style={{ textAlign: \"center\" }}>\n                Admin login\n              </h1>\n              <form\n                className=\"mt-4\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setLoading(true);\n                  axios\n                    .post(\n                      \"https://livioscreeningapi.herokuapp.com/admin/login\",\n                      {\n                        email,\n                        password,\n                      }\n                    )\n                    .then((response) => {\n                      sessionStorage.setItem(\"token\", response.data.token);\n                      setLoading(false);\n                      history.push(\"/adminoptions\");\n                    })\n                    .catch((error) => {\n                      console.log(error);\n                      setLoading(false);\n                    });\n                }}\n              >\n                <div className=\"mb-3\">\n                  <input\n                    placeholder=\"Email Address\"\n                    type=\"email\"\n                    className=\"form-control\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"form-control\"\n                    value={password}\n                    onChange={(e) => {\n                      setPassword(e.currentTarget.value);\n                    }}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary \"\n                  style={{ width: \"100%\" }}\n                >\n                  Login\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default AdminLogin;\n","let Option = ({ question, alpha, selectedOption, setSelectedOption }) => {\n  return (\n    <div className=\"form-check\">\n      <input\n        className=\"form-check-input\"\n        type=\"radio\"\n        name={\"ans\" + question._id}\n        value={`option${alpha.toUpperCase()}`}\n        checked={\n          selectedOption === `option${alpha.toUpperCase()}` ? true : false\n        }\n        onChange={(e) => {\n          let userAns = e.currentTarget.value;\n          setSelectedOption(userAns);\n        }}\n        id={question._id + alpha}\n      />\n      <label className=\"form-check-label\" htmlfor={question._id}>\n        {question[`${alpha}Img`] ? (\n          <img\n            style={{ height: \"20vh\" }}\n            src={question[`option${alpha.toUpperCase()}`]}\n            alt=\"option\"\n          />\n        ) : (\n          question[`option${alpha.toUpperCase()}`]\n        )}\n      </label>\n    </div>\n  );\n};\n\nexport default Option;\n","import { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport Option from \"./Option\";\nimport axios from \"axios\";\n\nlet Test = ({ test, testScore, setTestScore, user }) => {\n  let [qNo, setQNo] = useState(1);\n  let options = [\"a\", \"b\", \"c\", \"d\"];\n  let [selectedOption, setSelectedOption] = useState(false);\n\n  useEffect(() => {\n    setTestScore({\n      level1: 0,\n      level2: 0,\n      level3: 0,\n      level4: 0,\n      level5: 0,\n    });\n  }, []);\n  return (\n    <>\n      {qNo > 10 ? (\n        <Redirect to=\"/userscore\" />\n      ) : (\n        <>\n          {test ? (\n            <div className=\"container p-4\">\n              <h2>\n                Q{qNo}- {test[qNo - 1].question}\n              </h2>\n              {test[qNo - 1].questionImg ? (\n                <img\n                  style={{ height: \"45vh\" }}\n                  src={test[qNo - 1].questionImg}\n                  alt=\"question\"\n                />\n              ) : (\n                \"\"\n              )}\n              <div className=\"mt-4\">\n                {options.map((el) => (\n                  <Option\n                    key={el}\n                    question={test[qNo - 1]}\n                    alpha={el}\n                    setTestScore={setTestScore}\n                    testScore={testScore}\n                    selectedOption={selectedOption}\n                    setSelectedOption={setSelectedOption}\n                  />\n                ))}\n              </div>\n              <button\n                className=\"btn btn-primary mt-4 mb-4\"\n                onClick={() => {\n                  let level = test[qNo - 1].levelTag;\n                  let newScore = { ...testScore };\n                  if (test[qNo - 1].answerOption === selectedOption) {\n                    newScore[level] = testScore[level] + 1;\n                  }\n                  setTestScore(newScore);\n                  setSelectedOption(false);\n                  if (qNo == 10) {\n                    //submit\n                    let totalScore = 0;\n                    let formattedScoreForApi = [];\n                    for (let x in testScore) {\n                      totalScore += testScore[x];\n                    }\n                    for (let i = 1; i <= 5; i++) {\n                      formattedScoreForApi[i - 1] = testScore[`level${i}`];\n                    }\n                    axios\n                      .post(\n                        \"https://livioscreeningapi.herokuapp.com/screening/submit\",\n                        {\n                          email: user.email,\n                          individualScore: formattedScoreForApi,\n                          totalScore,\n                        }\n                      )\n                      .then((response) => {\n                        console.log(response.data);\n                        //history to thank you\n                      })\n                      .catch((error) => {\n                        console.log(error);\n                      });\n                  }\n                  setQNo(qNo + 1);\n                }}\n              >\n                Next\n              </button>\n            </div>\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Test;\n","import { useHistory } from \"react-router\";\nimport axios from \"axios\";\nlet AdminOptions = () => {\n  let history = useHistory();\n  return (\n    <>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          history.push(\"/admindelete\");\n        }}\n      >\n        Delete Questions\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          let token = sessionStorage.getItem(\"token\");\n          axios\n            .post(\n              \"https://livioscreeningapi.herokuapp.com/admin/logout\",\n              {},\n              {\n                headers: { Authorization: `Bearer ${token}` },\n              }\n            )\n            .then(() => {\n              sessionStorage.clear();\n              history.push(\"/adminlogin\");\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        }}\n      >\n        logout\n      </button>\n    </>\n  );\n};\n\nexport default AdminOptions;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nlet DeleteQuestion = () => {\n  let [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    getQuestionsReq();\n  }, []);\n  let getQuestionsReq = () => {\n    let token = sessionStorage.getItem(\"token\");\n    axios\n      .get(\"https://livioscreeningapi.herokuapp.com/admin/getquestions\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setQuestions(response.data.questions);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-8 offset-2\">\n          <h1>All Questions</h1>\n          <table class=\"table \">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Question</th>\n                <th scope=\"col\">Level</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr></tr>\n              {questions.map((el, index) => (\n                <tr>\n                  <td>{index + 1}</td>\n                  <td>{el.question}</td>\n                  <td>{el.levelTag}</td>\n                  <td>\n                    <button\n                      class=\"btn btn-danger\"\n                      onClick={() => {\n                        let token = sessionStorage.getItem(\"token\");\n                        axios\n                          .post(\n                            \"https://livioscreeningapi.herokuapp.com/admin/deletequestion\",\n                            {\n                              _id: el._id,\n                            },\n                            {\n                              headers: { Authorization: `Bearer ${token}` },\n                            }\n                          )\n                          .then(() => {\n                            getQuestionsReq();\n                          })\n                          .catch((error) => {\n                            console.log(error);\n                          });\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DeleteQuestion;\n","import Navbar from \"./components/Navbar\";\nimport Register from \"./components/Register\";\nimport UserScore from \"./components/UserScore\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Adminlogin from \"./components/AdminLogin\";\nimport { useState } from \"react\";\nimport Test from \"./components/Test\";\nimport AdminOptions from \"./components/AdminOptions\";\nimport DeleteQuestion from \"./components/DeleteQuestion\";\nlet App = () => {\n  let [user, setUser] = useState(null);\n  let [test, setTest] = useState(null);\n  let [testScore, setTestScore] = useState({\n    level1: 0,\n    level2: 0,\n    level3: 0,\n    level4: 0,\n    level5: 0,\n  });\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/adminlogin\">\n            <Navbar />\n            <Adminlogin />\n          </Route>\n          <Route path=\"/adminoptions\">\n            <Navbar />\n            <AdminOptions />\n          </Route>\n          <Route path=\"/adminadd\">\n            <Navbar />\n          </Route>\n          <Route path=\"/admindelete\">\n            <Navbar />\n            <DeleteQuestion />\n          </Route>\n          <Route path=\"/adminscore\">\n            <Navbar />\n          </Route>\n          <Route path=\"/test\">\n            <Test\n              test={test}\n              testScore={testScore}\n              user={user}\n              setTestScore={setTestScore}\n            />\n          </Route>\n          <Route path=\"/userscore\">\n            <Navbar />\n            <UserScore user={user} />\n          </Route>\n          <Route path=\"/\">\n            <Navbar />\n            <Register setUser={setUser} setTest={setTest} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}